//BREADCRUMB CSS ADAPTED FROM PIXEL PERFECT: https://codepen.io/Stanssongs/pen/axvdg

@import "../../../assets/sass/md/_variables.scss";

* {
  margin: 0;
  padding: 0;
}

.breadcrumb {
  /*centering*/
  display: inline-block;
  box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.35);
  overflow: hidden;
  border-radius: $border-radius-base;
}

.breadcrumb div {
  a {
    text-decoration: none;
    outline: none;
    display: block;
    float: left;
    font-size: $font-size-base;
    line-height: 36px;
    color: $text-color;
    padding: 0 20px 0 40px;
    position: relative;
  }
  /*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
  a:first-child {
    padding-left: 20px;
    border-radius: $border-radius-base 0 0 $border-radius-base; /*to match with the parent's radius*/
  }
  a:last-child {
    border-radius: 0 $border-radius-base $border-radius-base 0 red; /*this was to prevent glitches on hover*/
    padding-right: 20px;
  }

  /*adding the arrows for the breadcrumbs using rotated pseudo elements*/
  a:after {
    content: "";
    position: absolute;
    top: 0;
    right: -18px; /*half of square's length*/
    /*same dimension as the line-height of .breadcrumb a */
    width: 36px;
    height: 36px;
    /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
    length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
    if diagonal required = 1; length = 1/1.414 = 0.707*/
    transform: scale(0.707) rotate(45deg);
    /*we need to prevent the arrows from getting buried under the next link*/
    z-index: 1;
    /*stylish arrow design using box shadow*/
    box-shadow: 2px -2px 0 2px $gray-lighter, 3px -3px 0 2px $white-transparent;
    /*
      5px - for rounded arrows and 
      50px - to prevent hover glitches on the border created using shadows*/
    border-radius: 0 $border-radius-base 0 50px;
  }

  a,
  a:after {
    background: $navbar-default-bg;
    transition: all 0.7s;
  }
  a:hover,
  a.active,
  a:hover:after,
  a.active:after {
    background: $green;
    color: $white;
  }
}
